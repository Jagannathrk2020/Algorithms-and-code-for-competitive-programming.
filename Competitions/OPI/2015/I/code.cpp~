#include <bits/stdc++.h>
#define MAX 3000
#define INF 10000
using namespace std;
int n, m, a[MAX];
int sum_acum[MAX], dp[MAX][MAX];

bool realValue(int n) {
    int result =  (n % 10 < 5) ? (n - (n % 10)): n + (10 -( n % 10));
    printf("%d\n", result);
    return result;
}

int DP(int index, int groups) {
    if(index < 0) return INF;
    if(groups == 0) return 0;
    if(dp[index][groups] > -1) return dp[index][groups];

    int dont_put_in_group = DP(index-1, groups) + a[index];
    int put_in_group = DP(index-1,groups-1) + realValue(sum_acum[n-1] - sum_acum[index]);
    if(realValue(put_in_group) < realValue(dont_put_in_group))
        dp[index][groups] = put_in_group;
    else
        dp[index][groups] = dont_put_in_group;
    
    return realValue(dp[index][groups]);
}

int main() {

    while(scanf("%d %d",&n,&m) != EOF) {
        for(int i = 0; i < n; i++) {scanf("%d",&a[i]); sum_acum[i] = a[i];}
        for(int i = 1; i < n; i++) sum_acum[i] += sum_acum[i-1];
        memset(dp, -1, sizeof dp);
        printf("%d\n",DP(n-1,m));
    }
    return 0;
}
